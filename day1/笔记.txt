1、模块化
  模块是把特定功能的代码放到一块,按照功能划分不同的文件(一个特定的功能对应一个js文件)，
  按照需求引入对应的模块
2、模块化的编写方式
    1）函数式编程（尽量将功能封装成函数，在用调用函数的方式去显现功能）
       缺点：污染了全局变量、看不出模块成员之间的关系
    2）对象的写法
        var o = {
            name:"zhangsan",
            age：13，
            fn:function(){}
        }
        //属性和方法  
        //访问属性的方式
        .和[]区别
        o.name = "lisi"
        缺点:把模块的所有的成员暴露给外面
    3）自执行函数的写法

      
3、模块化的规范
    1）commonjs 以后node会讲 服务器端
    2）AMD 重点  代表require.js   加载模块之前需要定义  异步
    3）CMD 了解  代表sea.js       加载模块之前不需要定义  同步

requirejs  模块加载器
  1、引入requirejs
  2、script标签上一个属性 
        data-main:主入口文件、主模块
  3、定义模块
       define([],function(){})
       两个参数：
          1)数组  依赖的模块 第一个参数可以省略不写 
          2）回调函数 
                在回调函数里面书写模块的相关的逻辑代码
 4  加载模块
    require([],function(){})
    两个参数：
        1、数组  需要加载的模块
        2、回调函数
             操作这些模块的逻辑代码书写在该回调函数里面
           
